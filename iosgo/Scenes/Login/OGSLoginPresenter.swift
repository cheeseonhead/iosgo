//
//  OGSLoginPresenter.swift
//  iosgo
//
//  Created by Jeffrey Wu on 2017-02-15.
//  Copyright (c) 2017 Cheeseonhead. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so you can apply
//  clean architecture to your iOS and Mac projects, see http://clean-swift.com
//

import UIKit

protocol OGSLoginPresenterInput
{
    func presentLogin(response: OGSLogin.Login.Response)
}

protocol OGSLoginPresenterOutput: class
{
    func displayLogin(viewModel: OGSLogin.Login.ViewModel)
}

class OGSLoginPresenter: OGSLoginPresenterInput
{
    weak var output: OGSLoginPresenterOutput!

    // MARK: - Presentation logic

    func presentLogin(response: OGSLogin.Login.Response)
    {
        let readyToNavigate = readyToNavigate(from: response)
        let userInputState = userInputState(from: response)
    }
}

fileprivate extension OGSLoginPresenter
{
    func readyToNavigate(from response: OGSLogin.Login.Response) -> Bool
    {
        switch response.loadingStatus {
        case .success:
            return true
        case .error, .loading:
            return false
        }
    }

    func userInputState(from response: OGSLogin.Login.Response) -> OGSLogin.Login.ViewModel.UserInputState
    {
        switch response.loadingStatus {
            case .loading:
        return .pending
        case .error, .success:
        return .ready
        }
    }
}