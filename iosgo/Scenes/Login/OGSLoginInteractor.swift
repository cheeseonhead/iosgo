//
//  OGSLoginInteractor.swift
//  iosgo
//
//  Created by Jeffrey Wu on 2017-02-15.
//  Copyright (c) 2017 Cheeseonhead. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so you can apply
//  clean architecture to your iOS and Mac projects, see http://clean-swift.com
//

import UIKit

protocol OGSLoginInteractorInput
{
    func login(request: OGSLogin.Login.Request)
}

protocol OGSLoginInteractorOutput
{
    func presentLogin(response: OGSLogin.Login.Response)
}

class OGSLoginInteractor: OGSLoginInteractorInput
{
    var output: OGSLoginInteractorOutput!
    var loginWorker = OGSLoginWorker()

    // MARK: - Business logic

    func login(request: OGSLogin.Login.Request)
    {
        var response = createInitialResponse()
        output.presentLogin(response: response)

        loginWorker.loginWith(username: request.username, password: request.password)
        { result in
            if result.success {
                response.loadingStatus = .success
            }
            else {
                let errorType = errorType(from: result.loginError)
                response.loadingStatus = .error(errorType)
            }

            self.output.presentLogin(response: response)
        }
    }
}

fileprivate extension OGSLoginInteractor
{
    func createInitialResponse() -> OGSLogin.Login.Response
    {
        let response = OGSLogin.Login.Response(loadingStatus: .loading)
        return response
    }

    func errorType(from error: OGSLoginWorker.LoginErrorType) -> OGSLogin.Login.Response.ErrorType
    {
        switch error {
            case .usernameNotFound:
                return .usernameNotFound
            case .passwordIncorrect:
                return .incorrectPassword
        }
    }
}