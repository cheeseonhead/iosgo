//
//  OGSLoginInteractor.swift
//  iosgo
//
//  Created by Jeffrey Wu on 2017-02-15.
//  Copyright (c) 2017 Cheeseonhead. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so you can apply
//  clean architecture to your iOS and Mac projects, see http://clean-swift.com
//

import UIKit

protocol OGSLoginInteractorInput
{
    func login(request: OGSLogin.Login.Request)
    func fieldsChange(request: OGSLogin.FieldsChanged.Request)
}

protocol OGSLoginInteractorOutput
{
    func presentLogin(response: OGSLogin.Login.Response)
}

class OGSLoginInteractor: OGSLoginInteractorInput
{
    var output: OGSLoginInteractorOutput!
    var loginWorker = OGSLoginWorker(authStore: OGSOauthApiStore())

    // MARK: - Business logic

    func login(request: OGSLogin.Login.Request)
    {
        let response = createInitialResponse()
        output.presentLogin(response: response)

        loginWorker.loginWith(username: request.username, password: request.password)
        { workerResponse in
            self.output.presentLogin(response: workerResponse)
        }
    }

    func fieldsChange(request: OGSLogin.FieldsChanged.Request)
    {
        
    }
}

fileprivate extension OGSLoginInteractor
{
    func createInitialResponse() -> OGSLogin.Login.Response
    {
        let response = OGSLogin.Login.Response(loadingStatus: .loading)
        return response
    }
}

extension OGSOauthApiStore: OGSOauthStoreProtocol {}
