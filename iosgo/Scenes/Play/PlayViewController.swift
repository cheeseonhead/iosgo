//
//  PlayViewController.swift
//  iosgo
//
//  Created by Cheese Onhead on 6/25/17.
//  Copyright (c) 2017 Cheeseonhead. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit
import SpriteKit

protocol PlayDisplayLogic: class {
    func displayLoadScene(viewModel: Play.LoadScene.ViewModel)
}

class PlayViewController: UIViewController {

    var interactor: PlayBusinessLogic?
    var router: (NSObjectProtocol & PlayRoutingLogic & PlayDataPassing)?

    @IBOutlet weak var boardView: SKView!

    // MARK: Object lifecycle

    override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?) {
        super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
        setup()
    }

    required init?(coder aDecoder: NSCoder) {
        super.init(coder: aDecoder)
        setup()
    }

    override func viewDidLoad() {
        // Load the SKScene from 'GameScene.sks'
        if let scene = SKScene(fileNamed: "BoardScene") {
            // Set the scale mode to scale to fit the window
            scene.scaleMode = .aspectFit

            // Present the scene
            boardView.presentScene(scene)
        }

        boardView.ignoresSiblingOrder = true

        boardView.showsFPS = true
        boardView.showsNodeCount = true
    }
}

// MARK: - Display
extension PlayViewController: PlayDisplayLogic {
    func displayLoadScene(viewModel _: Play.LoadScene.ViewModel) {
        interactor?.loadScene(request: Play.LoadScene.Request())
    }
}

// MARK: Setup
private extension PlayViewController {

    func setup() {
        let viewController = self
        let interactor = PlayInteractor()
        let presenter = PlayPresenter()
        let router = PlayRouter()
        viewController.interactor = interactor
        viewController.router = router
        interactor.presenter = presenter
        presenter.viewController = viewController
        router.viewController = viewController
        router.dataStore = interactor
    }
}
